# -*- coding: utf-8 -*-
"""student-study-performance.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w3kBdIkXBJf1JRrX1vu0tpZW-E8DbvaC
"""

from google.colab import drive
drive.mount('/content/drive')

!pip install kaggle

"""# **Loading Dataset**"""

import os
os.environ['KAGGLE_CONFIG_DIR'] = '/content/drive/MyDrive/Kaggle'

!kaggle datasets download -d bhavikjikadara/student-study-performance

import zipfile

file_path = '/content/drive/MyDrive/Kaggle/student-study-performance.zip'

with zipfile.ZipFile(file_path, 'r') as zip_ref:
    zip_ref.extractall('/content/drive/MyDrive/Kaggle')

"""# **Information about Dataset**
* **gender:** sex of students -> (Male/female)
* **race/ethnicity:** ethnicity of students -> (Group A, B,C, D,E)
* **parental level of education:** parents' final education ->(bachelor's degree,some college,master's degree,associate's degree,- high school)
* **lunch:** having lunch before test (standard or free/reduced)
* **test preparation course:** complete or not complete before test
* **math score**
* **reading score**
* **writing score**

# **Import Libraries**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""# **Loading and Exploring Data**"""

df = pd.read_csv('/content/drive/MyDrive/Kaggle/study_performance.csv')

df.shape

df.columns

df.head()

df.tail(5)

df.info()

df.describe().style.background_gradient(cmap = "Blues")

"""# **Checking Data Quality**

**1. Duplicated Data**
"""

df.duplicated().sum()

"""
**2. Missing Data**

"""

df.isnull().sum()

"""# **Visualization**"""

df.plot.hist()

df.head(10).plot.bar()

df.tail(10).plot.bar(stacked=True)

df.plot.kde()

df['gender'].value_counts()

df["gender"].value_counts().plot.bar(figsize=(5,5))
plt.title("Gender Frequency",fontsize=10)
plt.show()

df["parental_level_of_education"].value_counts()

data=df["parental_level_of_education"].value_counts()
colors=('lightblue','pink','gray','purple','navy','brown')
data.plot(kind='pie', colors=colors, autopct='%1.1f%%')
plt.title("Distribution of Level of Education", loc='center',color='Black', fontsize=10, fontweight='bold')
fig= plt.figure(figsize=(10,5))
plt.show()

df["race_ethnicity"].value_counts()

df["race_ethnicity"].value_counts()
labels=['group A', 'group B', 'group C', 'group D', 'group E']
colors=['purple','gray','brown','black','Red']
plt.pie(df["race_ethnicity"].value_counts(), labels=labels, colors=colors, autopct='%1.1f%%')
plt.axis('equal')
plt.title("Race Ethnicity", loc='center', color='Blue', fontsize='15')
plt.gca().add_artist(plt.Circle(xy=(0,0),radius=0.75, facecolor='white'))
plt.show()

c1 = pd.crosstab(index=df['test_preparation_course'],
                columns=df['gender'],).plot.bar()
c2 = pd.crosstab(index=df['parental_level_of_education'],
                columns=df['gender'],).plot.bar()

pd.crosstab(index=df['parental_level_of_education'],
                columns=df['test_preparation_course'],).plot.bar()

ax = sns.catplot(kind='count', data=df, x='lunch', hue='race_ethnicity',height=6, aspect=2 )
ax.set_xlabels('Lunch', fontsize=8)
ax.legend.set_title('Race Ethnicity')
plt.title('Lunch of each group',fontsize=15)
plt.show()

t1 = sns.catplot(data=df, x="test_preparation_course", y="math_score",kind="bar", height=5, aspect=.7)
t2 = sns.catplot(data=df, x="test_preparation_course", y="reading_score",kind="bar", height=5, aspect=.7)
t3 = sns.catplot(data=df, x="test_preparation_course", y="writing_score",kind="bar", height=5, aspect=.7)
plt.show()